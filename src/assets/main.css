@font-face {
  font-family: 'Learning Curve';
  src: url('/learning-curve.ttf') format('truetype');
  font-weight: normal;
}

:root {
  /* Colors */
  --main-bg-color: #fffbe6;
  --secondary-bg-color: #f5f5f5;
  --main-text-color: #333;
  --subtle-text-color: #888;
  --main-link-color: rgba(243, 254, 61, 0);
  --main-link-color-hover: rgba(243, 254, 61, 0.8);
  --line-color: #85abfa;

  /* Spacing */
  --font-size: 37px;
  --line-position: 0.87rem;
  --line-height: 1rem;
  --left-margin: 2.5rem;
  --left-gutter: 0.5rem;
  --right-gutter: 1rem;
  --header-height: calc((var(--line-height) * 2.5) - 4px);
}

@media (max-width: 768px) {
  :root {
    --font-size: 30px;
    --left-margin: 2rem;
    --header-height: calc((var(--line-height) * 3) - 4px);
  }
}

/*** The new CSS Reset - version 1.2.0 (last updated 23.7.2021) ***/

/* Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property */
*:where(:not(iframe, canvas, img, svg, video):not(svg *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
  Remove list styles (bullets/numbers)
  in case you use it with normalize.css
*/
ol,
ul {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-width: 100%;
}

/* Removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* Use system font stack for better performance */
html,
button,
input,
textarea,
select {
  font-family: 'Learning Curve', sans-serif;
  font-optical-sizing: auto;
  font-size: var(--font-size);
  margin: 0;
  padding: 0;
  color: var(--main-text-color);
}

/* box sizing rules */
*,
*:before,
*:after {
  box-sizing: border-box;
}

body {
  padding: 1rem 0.5rem;
}
main {
  margin: 0 auto;
  max-width: 800px;
  line-height: var(--line-height);
}

.hidden {
  display: none;
}

a {
  background-color: var(--main-link-color);
  transition: all 0.2s ease-in-out;
}
a {
  text-decoration: underline;
}
a:hover {
  background-color: var(--main-link-color-hover);
}

.task {
  padding: 0 0.8rem;
  position: relative;
  display: flex;
}
.task:before {
  content: 'â€¢';
  position: absolute;
  left: 0;
  top: 0.11em;
}
.task--label-input {
  flex: 1;
}
.task--new input {
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
}
.task--new input:focus,
.task--new input:hover {
  opacity: 1;
}
.task--actions {
  margin-left: auto;
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  height: 1rem;
}
button.task--edit {
  flex: 1;
  cursor: text;
  text-align: left;
}
button.task--edit span {
  opacity: 0;
  color: var(--subtle-text-color);
  padding-left: 1.5rem;
}
button.task--edit:focus span {
  opacity: 1;
}

.task input[type='checkbox'] {
  opacity: 0;
}
.task--label {
  position: relative;
}

.task input[type='checkbox'] + .task--label:before {
  content: '';
  height: 2px;
  width: 0;
  background-color: var(--main-text-color);
  display: block;
  top: 50%;
  left: -0.9rem;
  position: absolute;
  transition: width 0.2s ease-in-out;
}
label.task:hover input[type='checkbox'] + .task--label:before {
  width: 0.4rem;
}
label.task input[type='checkbox']:checked + .task--label:before {
  width: calc(100% + 1.4rem);
}
label.task {
  cursor: pointer;
}

h1,
h2 {
  font-weight: bold;
}

h1 {
  font-size: 1.4em;
}

h2 {
  margin-bottom: var(--line-height);
}

/* Stylised like a note pad */
html {
  background-color: var(--secondary-bg-color);
}

main {
  min-height: 80vh;
  background-color: var(--main-bg-color);
  position: relative;
  box-shadow: 0 0 1em rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
}

main > article {
  flex: 1;
  background: linear-gradient(
    to bottom,
    #fffbe6,
    #fffbe6 calc(var(--line-height) - 2px),
    #85abfa 2px,
    #85abfa
  );
  /* The rectangle in which to repeat. 
   It can be fully wide in this case */
  background-size: 100% var(--line-height);
  background-position-y: var(--line-position);
}

main {
  border-top-right-radius: 1rem;
}
main,
main > article {
  border-bottom-right-radius: 1rem;
}

main > header {
  display: flex;
  justify-content: space-between;
  align-items: end;
  margin-bottom: 4px;
}
main > header,
main > article {
  padding-left: calc(var(--left-margin) + var(--left-gutter));
  padding-right: var(--right-gutter);
}
main > article {
  padding-top: 2px;
  padding-top: var(--line-height);
  padding-bottom: var(--line-height);
}

main:before {
  content: '';
  position: absolute;
  height: 100%;
  width: 2px;
  left: var(--left-margin);
  top: 0;
  background-color: #e78587;
  z-index: 1;
}

main > header {
  height: var(--header-height);
  width: 100%;
  top: 0;
  left: 0;
  position: relative;
  padding-bottom: 8px;
}
main > header:after {
  content: '';
  position: absolute;
  height: 8px;
  width: 100%;
  bottom: 0;
  left: 0;
  border-top: 2px solid var(--line-color);
  border-bottom: 2px solid var(--line-color);
}
main > header > * {
  position: relative;
  z-index: 2;
}

/* list transitions */
.list-enter-active,
.list-leave-active {
  transition: all 0.5s ease;
}
.list-enter-from,
.list-leave-to {
  opacity: 0;
  transform: translateX(30px);
}
